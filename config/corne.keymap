/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            timeout-ms = <50>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
            timeout-ms = <50>;
            layers = <0>;
        };

        tmux_leader {
            bindings = <&kp LC(A)>;
            key-positions = <14 15>;
            timeout-ms = <50>;
            layers = <0>;
        };

        bt_reset {
            bindings = <&bt BT_CLR>;
            key-positions = <25 26 34 33>;
            require-prior-idle-ms = <200>;
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
        };

        thumb_layer: thumb_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
        };

        thumb_modifier: thumb_modifier {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MODIFIER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 4 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 8 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q          &kp W         &kp E        &kp R        &kp T                          &kp Y      &hml LWIN U           &hmr LALT I  &hmr LCTRL O  &hmr LSHIFT P  &trans
&trans  &hml LSHIFT A  &hml LCTRL S  &hml LALT D  &hml LWIN F  &kp G                          &kp H      &kp J                 &kp K        &kp L         &kp SEMI       &trans
&trans  &kp Z          &kp X         &kp C        &kp V        &kp B                          &kp N      &kp M                 &kp COMMA    &kp DOT       &kp FSLH       &trans
                                     &kp TAB      &mo 1        &thumb_modifier LWIN RETURN    &kp SPACE  &thumb_layer 2 SPACE  &kp ESCAPE
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION   &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans    &trans  &kp N7        &kp N8        &kp N9        &kp BACKSPACE  &trans
&trans  &kp LESS_THAN     &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH      &trans
&trans  &kp GREATER_THAN  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans    &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp QUESTION   &trans
                                  &trans                &trans                 &trans    &trans  &mo 3         &trans
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL          &kp AT  &kp HASH        &kp DLLR      &kp PRCNT               &kp CARET         &kp AMPS          &kp ASTERISK      &kp MINUS             &kp EQUAL  &trans
&trans  &kp LESS_THAN     &trans  &kp UNDERSCORE  &kp SLASH     &kp PIPE                &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &kp LA(NUMBER_4)      &kp GRAVE  &trans
&trans  &kp GREATER_THAN  &trans  &kp PLUS        &kp QUESTION  &kp NON_US_BACKSLASH    &kp LA(N5)        &kp LA(NUMBER_6)  &kp PIPE          &kp NON_US_BACKSLASH  &kp TILDE  &trans
                                  &trans          &mo 3         &trans                  &trans            &trans            &trans
            >;
        };

        opt {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans          &kp CAPSLOCK    &trans        &kp UNDERSCORE  &kp PLUS  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT       &trans    &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans          &trans          &trans        &trans          &trans    &trans
                                    &trans        &trans        &trans          &trans          &trans          &trans
            >;
        };
    };
};
